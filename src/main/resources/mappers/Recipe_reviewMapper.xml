<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- 해당 조건을 처리하기 위해 ? 대신 #{}를 사용하게 됐지.
  		#{} 구문은 get()/set()으로 사용돼. 
  		https://mybatis.org/mybatis-3/ko/sqlmap-xml.html 여기 읽어보면 문법이 나와있어. -->
  
  <mapper namespace="com.luvit.mapper.Recipe_reviewMapper">
  
	<!-- 레시피_리뷰 작성시간
	<select id="getTime" resultType="string">
		select now()
	</select>
		 레시피_리뷰 작성시간 -->
	
	<!-- 레시피_리뷰 번호 -->
	<select id="cntBno">
		select max(r_r_bno)
		from recipe_review
	</select>
	<!-- 레시피_리뷰 번호 -->
	
	<!-- 레시피_리뷰 목록 -->
	<select id="list" resultType="com.luvit.domain.Recipe_reviewVO">
		select r_r_bno, r_r_id, r_r_nickname, r_r_subject, r_r_content, r_r_file, r_r_thumbnail, r_r_date, r_r_hit 
		from recipe_review
	</select>
	<!-- 레시피_리뷰 목록 -->
	
	<!-- 레시피_리뷰 작성 -->
	<insert id="write" parameterType="com.luvit.domain.Recipe_reviewVO">
		insert into recipe_review(r_r_subject, r_r_content, r_r_file, r_r_thumbnail, r_r_date, r_r_nickname,r_r_id)
		values(#{r_r_subject}, #{r_r_content}, #{r_r_file}, #{r_r_thumbnail}, now(), #{r_r_nickname},#{r_r_id})
	</insert>
	<!-- 레시피_리뷰 작성 -->

	<!-- 레시피_리뷰 조회 -->
	<select id="view" parameterType="int" resultType="com.luvit.domain.Recipe_reviewVO">
		select r_r_bno, r_r_subject, r_r_content, r_r_file, r_r_thumbnail, r_r_nickname, r_r_date, r_r_hit,r_r_id
		from recipe_review
		where r_r_bno = #{r_r_bno}   
	</select>
	<!-- 레시피_리뷰 조회 -->
	
	<!-- 레시피_리뷰 조회수 -->
    <update id="hit" parameterType="int">
    	update recipe_review
    	set r_r_hit = r_r_hit+1
    	where r_r_bno = #{r_r_bno}
    </update>
    <!-- 레시피_리뷰 조회수 -->
	
	<!-- 레시피_리뷰 수정 -->
	<update id="modify" parameterType="com.luvit.domain.Recipe_reviewVO">
		update recipe_review
		set r_r_subject = #{r_r_subject}, 
			r_r_content = #{r_r_content}, 
			r_r_file = #{r_r_file}, 
			r_r_thumbnail = #{r_r_thumbnail}
		where r_r_bno = #{r_r_bno}
	</update>
	<!-- 레시피_리뷰 수정 -->
	
	<!-- 레시피_리뷰 삭제 -->
	<delete id="delete" parameterType="int">
		delete from recipe_review
		where r_r_bno = #{r_r_bno}
	</delete>
	<!-- 레시피_리뷰 삭제 -->
	
	<!-- 레시피_리뷰 총 수 -->
	<select id="count" resultType="int">
		select count(r_r_bno) from recipe_review
	</select>
	<!-- 레시피_리뷰 총 수 -->
	
	<!-- 레시피_리뷰 목록 + 페이징 + 검색 -->
	<select id="listPageSearch" parameterType="hashMap" resultType="com.luvit.domain.Recipe_reviewVO">
		select r_r_bno, r_r_subject, r_r_nickname, r_r_file, r_r_thumbnail, r_r_date, r_r_hit
		from recipe_review
		<if test='searchType.equals("r_r_subject")'>
			WHERE r_r_subject LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("r_r_content")'>
			WHERE r_r_content LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("r_r_subject_content")'>
			WHERE r_r_subject LIKE concat('%', #{keyword}, '%') 
			or r_r_content LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("r_r_nickname")'>
			WHERE r_r_nickname LIKE concat('%', #{keyword}, '%')
		</if>
		order by r_r_bno desc
		limit #{displayPost}, #{postNum}
	</select>
	<!-- 레시피_리뷰 목록 + 페이징 + 검색 -->
	
	<!-- 레시피_리뷰 총 수 + 검색 적용 -->
	<select id="searchCount" parameterType="hashMap" resultType="int">
		select count(r_r_bno) from recipe_review  
		<if test='searchType.equals("r_r_subject")'>
			WHERE r_r_subject LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("r_r_content")'>
			WHERE r_r_content LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("r_r_subject_content")'>
			WHERE r_r_subject LIKE concat('%', #{keyword}, '%') 
			or r_r_content LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("r_r_nickname")'>
			WHERE r_r_nickname LIKE concat('%', #{keyword}, '%')
		</if>
	</select>
	<!-- 레시피_리뷰 총 수 + 검색 적용 -->
	
  </mapper>
