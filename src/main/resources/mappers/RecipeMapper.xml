<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- 해당 조건을 처리하기 위해 ? 대신 #{}를 사용하게 됐지.
  		#{} 구문은 get()/set()으로 사용돼. 
  		https://mybatis.org/mybatis-3/ko/sqlmap-xml.html 여기 읽어보면 문법이 나와있어. -->
  
  <mapper namespace="com.luvit.mapper.RecipeMapper">
	
  	<!-- 게시글 추가하기 -->
  	<insert id="insertBoard">
  		insert into recipe(r_subject, r_introduce, r_ing, r_content, r_tag1, 
  		r_tag2, r_tag3, r_tag4, r_cate, r_cooking_time, r_nickname, 
  		r_kcal, r_like_count, r_hit, r_date, r_thumbnail, 
  		r_file, r_id, r_avg) 
  		values(#{r_subject}, #{r_introduce}, #{r_ing}, #{r_content}, #{r_tag1}, 
  		#{r_tag2}, #{r_tag3}, #{r_tag4}, #{r_cate}, #{r_cooking_time}, #{r_nickname}, 
  		#{r_kcal}, 0, 0, now(), #{r_thumbnail}, 
  		#{r_file}, #{r_id}, #{r_avg})
  	</insert>
  	
  	<!-- 게시글 리스트 보기 -->
  	<!-- mybatis-config.xml에서 typeAliases 선언해서 rs 패키지명 입력 안 해도 됨-->
  	<!-- select id="listBoard" resultType="com.luvit.domain.RecipeVO"> -->
  	<select id="listBoard" resultType="rvo">
  		select * from recipe 
  		order by r_bno DESC
  	</select>
  	
  	<!-- 게시글 본문 보기 -->
  	<select id="detailBoard" resultType="rvo">
  		select * from recipe 
  		where r_bno = #{r_bno}
  	</select>
  	
  	<!-- 선택한 글 조회수 증가 -->
  	<update id="recipeHit" parameterType="int">
  		update recipe 
  		set r_hit = r_hit+1 
  		where r_bno = #{r_bno}
  	</update>
  	
  	<!-- 게시글 삭제하기 -->
  	<delete id="deleteBoard">
  		delete from recipe 
  		where r_bno = #{r_bno}
  	</delete>
  	
  	<!-- 게시글 수정하기 -->
  	<update id="updateBoard">
  		update recipe set r_subject=#{r_subject}, r_introduce=#{r_introduce}, r_ing=#{r_ing}, r_content=#{r_content}, r_tag1=#{r_tag1}, 
  		r_tag2=#{r_tag2}, r_tag3=#{r_tag3}, r_tag4=#{r_tag4}, r_cooking_time=#{r_cooking_time}, r_kcal=#{r_kcal}, r_thumbnail=#{r_thumbnail}, r_file=#{r_file} 
  		where r_bno=#{r_bno}
  		
  	</update>
  	
  	<!-- 게시물 총 갯수 -->
  	<select id="count" resultType="int">
  		select count(r_bno) from recipe
  	</select>
  	
  	<!-- 게시물 총 갯수 + 검색 적용-->
  	<select id="searchCount" parameterType ="hashMap" resultType="int">
  		select count(r_bno) from recipe 
  		<if test='searchType.equals("title")'>
			WHERE r_subject LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("content")'>
			WHERE r_content LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("title_content")'>
			WHERE r_subject LIKE concat('%', #{keyword}, '%') 
			or r_content LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("writer")'>
			WHERE r_nickname LIKE concat('%', #{keyword}, '%')
		</if>
 		
  		
  	</select>
  	
  	<!-- 게시물 목록 + 페이징 -->
  	<select id="listPage" resultType="rvo">
  		select * 
		from recipe 
		order by r_bno desc 
  			limit #{displayPost}, #{postNum}
  	</select>
  	
  	<!-- 해당 태그에 따른 게시물 리스트 출력 + 페이징 -->
  	<select id="tagResult" resultType="rvo">
  		select * from recipe 
  		where r_tag1 like CONCAT('%',#{tag},'%') or r_tag2 like CONCAT('%',#{tag},'%') or r_tag3 like CONCAT('%',#{tag},'%') or r_tag4 like CONCAT('%',#{tag},'%')
  		order by r_bno desc limit #{displayPost}, #{postNum} 
  	</select>
  	
  	<!-- 해당 태그에 따른 게시물 총 갯수 -->
  	<select id="tagCount" resultType="int">
  	 	select count(r_bno) from recipe 
  	 	where r_tag1 like CONCAT('%',#{tag},'%') or r_tag2 like CONCAT('%',#{tag},'%') or r_tag3 like CONCAT('%',#{tag},'%') or r_tag4 like CONCAT('%',#{tag},'%')
  	</select>
  	
  	<!-- 게시글 중에서 조회수가 가장 높은 게시물 n개만 조회하기 -->
  	<select id="readRecipeAmount" resultType="rvo">
  		select * from recipe 
  		order by r_hit desc limit #{hopeAmount}
  	</select>
  	
  	<!-- 해당 태그들 중 가장 선택률이 높은 태그를 뿌리기 -->
  	<select id="bestTag2" resultType="String">
  		select r_tag2 from recipe group by r_tag2 
		having count(*) = (select max(best) 
							from (select r_tag2, count(*) as best 
								  from recipe group by r_tag2) as result) limit 1;
  	</select>
  	
  	<!-- 해당 태그들 중 가장 선택률이 높은 태그를 뿌리기 -->
  	<select id="bestTag3" resultType="String">
  		select r_tag3 from recipe group by r_tag3 
		having count(*) = (select max(best) 
							from (select r_tag3, count(*) as best 
								  from recipe group by r_tag3) as result) limit 1;
  	</select>
  	
  	<!-- 해당 태그들 중 가장 선택률이 높은 태그를 뿌리기 -->
  	<select id="bestTag4" resultType="String">
  		select r_tag4 from recipe group by r_tag4 
		having count(*) = (select max(best) 
							from (select r_tag4, count(*) as best 
								  from recipe group by r_tag4) as result) limit 1;
  	</select>
  	
  	<!-- 레시피 목록 + 페이징 + 검색 -->
	<select id="listPageSearch" parameterType="hashMap" resultType="rvo">
		select * 
		from recipe 
		<if test='searchType.equals("title")'>
			WHERE r_subject LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("content")'>
			WHERE r_content LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("title_content")'>
			WHERE r_subject LIKE concat('%', #{keyword}, '%') 
			or r_content LIKE concat('%', #{keyword}, '%')
		</if>
		<if test='searchType.equals("writer")'>
			WHERE r_nickname LIKE concat('%', #{keyword}, '%')
		</if>
		order by r_bno desc 
			limit #{displayPost}, #{postNum}
	</select>
	<!-- 레시피_리뷰 목록 + 페이징 + 검색 -->
	
	
	<!-- 유저 마이페이지에서 필요한 기능 -->
	
	<!-- 해당 유저가 작성한 글 목록 -->
	<select id="myBoardList" resultType="rvo">
		select * from recipe where r_id=#{r_id}
	</select>

	
	
  </mapper>